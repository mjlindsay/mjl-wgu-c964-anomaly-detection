services:
  otel:
    image: otel/opentelemetry-collector-contrib:0.119.0
    ports:
      - 4318:4318
      - 4317:4317
      - 4319:4319
      - 4320:4320
      - 9001:9001
    volumes:
      - type: bind
        source: ./otel-config.yaml
        target: /etc/otelcol-contrib/config.yaml
        read_only: true
    depends_on:
      kafka:
        condition: service_healthy
        restart: true
  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094,
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 15s
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - ./kui_config.yaml:/etc/kafkaui/dynamic_config.yaml
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prom-config.yaml:/etc/prometheus/prometheus.yml
      - ./prometheus-data/:/prometheus
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    ports:
      - 9000:3000
    volumes:
      - ./grafana-data/:/var/lib/grafana
      - ./grafana-config.ini:/etc/grafana/grafana.ini